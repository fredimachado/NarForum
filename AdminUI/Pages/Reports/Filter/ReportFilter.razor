@using AdminUI.Models.Report
<h3 class="filter-header">Filter</h3>

@if (QueryModel != null)
{
    <EditForm Model="@QueryModel" OnValidSubmit="HandleQuery">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Title</label>
                    <InputText id="title" class="form-control" placeholder="search title" @bind-Value="@QueryModel.Title" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.Title)" />
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Username</label>
                    <InputText id="content" class="form-control" placeholder="search username" @bind-Value="@QueryModel.SearchUsername" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.SearchUsername)" />
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Post Id</label>
                    <InputText id="content" class="form-control" placeholder="search post id" @bind-Value="@QueryModel.SearchPostId" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.SearchPostId)" />
                </div>
            </div>
        </div>
        <div class="row" style="margin-top:10px;">
            <div class="col-sm-9">
            </div>
            <div class="col-sm-3 text-end">
                <div class="form-group">
                    <input type="submit" value="Filter" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </EditForm>
}


@code {
    [Parameter]
    public GetReportsWithPaginationQueryVM? QueryModel { get; set; }

    [Parameter]
    public EventCallback<int> Callback { get; set; }

    private void OnChangeCategory()
    {

    }

    protected async Task HandleQuery()
    {
        if (Callback.HasDelegate)
        {

            if (QueryModel.SearchPostId is not null)
            {
                Guid postGuid;
                bool isValid = Guid.TryParse(QueryModel.SearchPostId, out postGuid);
                if (isValid)
                {
                    QueryModel.PostId = postGuid;
                }
                else
                {
                    QueryModel.PostId = null;
                    QueryModel.SearchPostId = null;
                }
            }
            else
            {
                QueryModel.PostId = null;
            }

            await Callback.InvokeAsync();
        }
    }
}
