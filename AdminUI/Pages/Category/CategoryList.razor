@page "/category/list"

<h3>Category List</h3>

<table class="table caption-top">
    <caption>List of users</caption>
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Title</th>
            <th scope="col">Post Counter</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @if (!isLoaded)
        {
            <p>Loading Data...</p>
        }
        else
        {
            @foreach (var category in Categories)
            {
                <tr>
                    <th scope="row">@category.Id</th>
                    <td>@category.Name</td>
                    <td>@category.PostCounter</td>
                    <td>-</td>
                </tr>
            }
        }

    </tbody>
</table>

@code {
    [Parameter]
    public int PageIndex { get; set; } = 1;

    public List<CategoryVM>? Categories { get; set; }

    [Inject]
    public ICategoryService CategoryService { get; set; }

    // Pagination variables
    private int PageSize = 10; // Number of items per page
    private int TotalPages = 1;
    private int CurrentPage = 1;

    private bool isLoaded { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (PageIndex == 0) PageIndex = 1;
        CurrentPage = PageIndex;

        CategoriesPaginationQueryVM query = new CategoriesPaginationQueryVM
        {
            PageIndex = PageIndex,
            PageSize = PageSize
        };

        CategoriesPaginationVM categoriesPagination = await CategoryService.GetCategoriesWithPagination(query);
        Categories = categoriesPagination.Categories;
        TotalPages = (int)Math.Ceiling((double)categoriesPagination.TotalCount / PageSize);

        isLoaded = true;
    }
}
