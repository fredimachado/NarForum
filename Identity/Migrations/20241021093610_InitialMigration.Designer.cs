// <auto-generated />
using System;
using Identity.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Identity.Migrations
{
    [DbContext(typeof(ForumIdentityDbContext))]
    [Migration("20241021093610_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Identity.Models.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsVisibleForCreator")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVisibleForReceiver")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Identity.Models.ConfirmRequest", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfirmRequests");
                });

            modelBuilder.Entity("Identity.Models.ForumUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("HeadingCounter")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastOnlineTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("PostCounter")
                        .HasColumnType("integer");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "18251732-5e3b-4876-b9bb-8746961907b8",
                            Email = "admin@localhost.com",
                            EmailConfirmed = true,
                            FirstName = "System",
                            HeadingCounter = 0,
                            IsBlocked = false,
                            LastName = "Admin",
                            LastOnlineTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDesCfs0emIyjlAPhsgcc3r2ASxWHmcYD0VNM6XYFwc/A8FuDKPhODXiimyeWL6R9w==",
                            PhoneNumberConfirmed = false,
                            PostCounter = 0,
                            RegisterDate = new DateTime(2024, 10, 21, 9, 36, 9, 539, DateTimeKind.Utc).AddTicks(7162),
                            Role = "Administrator",
                            SecurityStamp = "9c0a5c85-db9a-44dc-9296-8f70df7be2d0",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f656e935-504e-4007-b9fa-8a45dd6b27b2",
                            Email = "user@localhost.com",
                            EmailConfirmed = true,
                            FirstName = "System",
                            HeadingCounter = 0,
                            IsBlocked = false,
                            LastName = "User",
                            LastOnlineTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@LOCALHOST.COM",
                            NormalizedUserName = "USER@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPGXe//EG76IZz97nwMPEsln7XWJpyetDfkKPzLX16s9+ATmwDbT1qK1z7ogSJraSg==",
                            PhoneNumberConfirmed = false,
                            PostCounter = 0,
                            RegisterDate = new DateTime(2024, 10, 21, 9, 36, 9, 607, DateTimeKind.Utc).AddTicks(6982),
                            SecurityStamp = "3d56483f-94cb-4ac0-9b3d-bce0642712d4",
                            TwoFactorEnabled = false,
                            UserName = "user"
                        },
                        new
                        {
                            Id = "076f24af-8934-4bf2-8d4e-03a5b48db4f4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9f933f75-4909-49b2-b9e5-707891609a76",
                            Email = "moderator@localhost.com",
                            EmailConfirmed = true,
                            FirstName = "System",
                            HeadingCounter = 0,
                            IsBlocked = false,
                            LastName = "Moderator",
                            LastOnlineTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "MODERATOR@LOCALHOST.COM",
                            NormalizedUserName = "MODERATOR@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAM67xLc0gNbDQx6VWowfzK0clvg1aEFpRvsIo4hRG8QxtWQPRe8IaAMDObqBfF6RQ==",
                            PhoneNumberConfirmed = false,
                            PostCounter = 0,
                            RegisterDate = new DateTime(2024, 10, 21, 9, 36, 9, 673, DateTimeKind.Utc).AddTicks(5316),
                            SecurityStamp = "58cc46d9-3020-4e4e-a952-e9acf515df68",
                            TwoFactorEnabled = false,
                            UserName = "moderator"
                        });
                });

            modelBuilder.Entity("Identity.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ChatId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVisibleForOwner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVisibleForReceiver")
                        .HasColumnType("boolean");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Identity.Models.PasswordRequest", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsChanged")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PasswordRequests");
                });

            modelBuilder.Entity("Identity.Models.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentPermissionId")
                        .HasColumnType("text");

                    b.Property<string>("PermissionDefinitionId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentPermissionId");

                    b.HasIndex("PermissionDefinitionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = "0e6f1e30-aaa1-49d3-8918-419291f9eebe",
                            DisplayName = "Admin",
                            IsGranted = true,
                            Name = "ADMIN",
                            PermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c",
                            RoleId = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf"
                        },
                        new
                        {
                            Id = "d4cc9401-ca88-4de3-941d-c5b2c1b960f4",
                            DisplayName = "Authorization",
                            IsGranted = true,
                            Name = "ADMIN_AUTHORIZATION",
                            ParentPermissionId = "0e6f1e30-aaa1-49d3-8918-419291f9eebe",
                            PermissionDefinitionId = "ba8b1242-49b5-4706-b641-e07d23b78884",
                            RoleId = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf"
                        },
                        new
                        {
                            Id = "0dd2e45e-0362-4672-a475-1e0b9912d130",
                            DisplayName = "Permission",
                            IsGranted = true,
                            Name = "ADMIN_AUTHORIZATION_PERMISSION",
                            ParentPermissionId = "d4cc9401-ca88-4de3-941d-c5b2c1b960f4",
                            PermissionDefinitionId = "5d3da4f1-95a7-4fc4-abac-df5f782f1e79",
                            RoleId = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf"
                        },
                        new
                        {
                            Id = "8fbbd082-aa86-4383-998c-c638d48164d1",
                            DisplayName = "Change Permission Status",
                            IsGranted = true,
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_STATUS_CHANGE",
                            ParentPermissionId = "0dd2e45e-0362-4672-a475-1e0b9912d130",
                            PermissionDefinitionId = "8347ac9a-2b9a-4b03-9cb5-3855adc46355",
                            RoleId = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf"
                        });
                });

            modelBuilder.Entity("Identity.Models.PermissionDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentPermissionDefinitionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentPermissionDefinitionId");

                    b.ToTable("PermissionDefinitions");

                    b.HasData(
                        new
                        {
                            Id = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8",
                            DisplayName = "Forum",
                            Name = "FORUM"
                        },
                        new
                        {
                            Id = "87800b42-e5dc-41e1-845a-789c387a9c8c",
                            DisplayName = "Admin",
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = "efd0da20-755d-4dcb-a10f-617d84bc52aa",
                            DisplayName = "Post",
                            Name = "FORUM_POST",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "336e4081-f40d-4e45-bcc5-adb0c04d016f",
                            DisplayName = "Heading",
                            Name = "FORUM_HEADING",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "d9687026-5c6b-44c8-a4cf-31a7f7ada844",
                            DisplayName = "Section",
                            Name = "FORUM_SECTION",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "1d42748d-3f19-4f1b-bde0-786a4a245f46",
                            DisplayName = "Category",
                            Name = "FORUM_CATEGORY",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "8fdcb439-e635-466f-ae81-d7b161fe9a80",
                            DisplayName = "Profile",
                            Name = "FORUM_PROFILE",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "433a025d-e09e-414c-8fa2-b3d8fc67ecbb",
                            DisplayName = "Message",
                            Name = "FORUM_MESSAGE",
                            ParentPermissionDefinitionId = "95e10e0e-7e21-4a7c-849b-30a2e82a61b8"
                        },
                        new
                        {
                            Id = "8c87ab42-975a-4016-92a8-ec8e34852fbf",
                            DisplayName = "Create Post",
                            Name = "FORUM_POST_CREATE",
                            ParentPermissionDefinitionId = "efd0da20-755d-4dcb-a10f-617d84bc52aa"
                        },
                        new
                        {
                            Id = "58b4d6c9-7db7-490b-b118-7fff4839fe69",
                            DisplayName = "Update Post",
                            Name = "FORUM_POST_UPDATE",
                            ParentPermissionDefinitionId = "efd0da20-755d-4dcb-a10f-617d84bc52aa"
                        },
                        new
                        {
                            Id = "edae4f5c-d414-4753-b20c-7f6d32b8ed23",
                            DisplayName = "Delete Post",
                            Name = "FORUM_POST_DELETE",
                            ParentPermissionDefinitionId = "efd0da20-755d-4dcb-a10f-617d84bc52aa"
                        },
                        new
                        {
                            Id = "6d4df87c-cf17-4db4-90e1-590b68e07e50",
                            DisplayName = "Create Heading",
                            Name = "FORUM_HEADING_CREATE",
                            ParentPermissionDefinitionId = "336e4081-f40d-4e45-bcc5-adb0c04d016f"
                        },
                        new
                        {
                            Id = "4b35a46b-0ee0-48f5-a44f-b1317c4e3af2",
                            DisplayName = "Update Heading",
                            Name = "FORUM_HEADING_UPDATE",
                            ParentPermissionDefinitionId = "336e4081-f40d-4e45-bcc5-adb0c04d016f"
                        },
                        new
                        {
                            Id = "f3311407-5848-4682-98ae-3a02701f1211",
                            DisplayName = "Delete Heading",
                            Name = "FORUM_HEADING_DELETE",
                            ParentPermissionDefinitionId = "336e4081-f40d-4e45-bcc5-adb0c04d016f"
                        },
                        new
                        {
                            Id = "3b68baff-2a60-4899-9e04-e66d7885de41",
                            DisplayName = "Pin Heading",
                            Name = "FORUM_HEADING_PIN",
                            ParentPermissionDefinitionId = "336e4081-f40d-4e45-bcc5-adb0c04d016f"
                        },
                        new
                        {
                            Id = "b79b4860-25b1-44cd-8d74-9c46f0f308c6",
                            DisplayName = "Lock Heading",
                            Name = "FORUM_HEADING_LOCK",
                            ParentPermissionDefinitionId = "336e4081-f40d-4e45-bcc5-adb0c04d016f"
                        },
                        new
                        {
                            Id = "0121f80b-f006-4b98-98b6-72fd0d294a9c",
                            DisplayName = "Create Section",
                            Name = "FORUM_SECTION_CREATE",
                            ParentPermissionDefinitionId = "d9687026-5c6b-44c8-a4cf-31a7f7ada844"
                        },
                        new
                        {
                            Id = "5cdd6187-b295-4ea5-ab2f-18355dab03bc",
                            DisplayName = "Update Section",
                            Name = "FORUM_SECTION_UPDATE",
                            ParentPermissionDefinitionId = "d9687026-5c6b-44c8-a4cf-31a7f7ada844"
                        },
                        new
                        {
                            Id = "36f5b8ce-f602-4268-ac03-047a92f255d8",
                            DisplayName = "Delete Section",
                            Name = "FORUM_SECTION_DELETE",
                            ParentPermissionDefinitionId = "d9687026-5c6b-44c8-a4cf-31a7f7ada844"
                        },
                        new
                        {
                            Id = "32b3175a-dd42-4431-bca1-9ab430ae84df",
                            DisplayName = "Create Category",
                            Name = "FORUM_CATEGORY_CREATE",
                            ParentPermissionDefinitionId = "1d42748d-3f19-4f1b-bde0-786a4a245f46"
                        },
                        new
                        {
                            Id = "72a2d85e-80f4-4bd4-abee-b98842122219",
                            DisplayName = "Update Category",
                            Name = "FORUM_CATEGORY_UPDATE",
                            ParentPermissionDefinitionId = "1d42748d-3f19-4f1b-bde0-786a4a245f46"
                        },
                        new
                        {
                            Id = "f258398c-250e-4d24-8b5b-327b6354f447",
                            DisplayName = "Delete Category",
                            Name = "FORUM_CATEGORY_DELETE",
                            ParentPermissionDefinitionId = "1d42748d-3f19-4f1b-bde0-786a4a245f46"
                        },
                        new
                        {
                            Id = "94466734-1998-4237-90c3-0b3473889dbd",
                            DisplayName = "View Profile Page",
                            Name = "FORUM_PROFILE_VIEW",
                            ParentPermissionDefinitionId = "8fdcb439-e635-466f-ae81-d7b161fe9a80"
                        },
                        new
                        {
                            Id = "03508f20-5c3c-4167-9f41-d8cee9c35620",
                            DisplayName = "Send Message",
                            Name = "FORUM_MESSAGE_SEND",
                            ParentPermissionDefinitionId = "433a025d-e09e-414c-8fa2-b3d8fc67ecbb"
                        },
                        new
                        {
                            Id = "6d807b00-447b-4e7f-8255-99912e4024e4",
                            DisplayName = "Post",
                            Name = "ADMIN_POST",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "7d6d900a-68bf-4b8c-961e-8a2a6f7f211e",
                            DisplayName = "Heading",
                            Name = "ADMIN_HEADING",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "f25163b7-43e5-4eba-bccb-95f8d2454f0a",
                            DisplayName = "Section",
                            Name = "ADMIN_SECTION",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "d2a3ae9f-c13e-459d-b5b6-3fe5937cceb4",
                            DisplayName = "Category",
                            Name = "ADMIN_CATEGORY",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "ea105968-d9b2-4534-a7be-8ff26911e6d4",
                            DisplayName = "Static Page",
                            Name = "ADMIN_STATIC_PAGE",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "60bff600-0087-4b56-be68-a2193adc4e74",
                            DisplayName = "Blog Post",
                            Name = "ADMIN_BLOG_POST",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "7a0d912d-6939-41e2-b5bf-bb1679b4444a",
                            DisplayName = "Blog Category",
                            Name = "ADMIN_BLOG_CATEGORY",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "8f512611-db14-4ae8-8c51-bd6ee781fd63",
                            DisplayName = "Blog Comment",
                            Name = "ADMIN_BLOG_COMMENT",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "dfe92ad3-1007-417c-bba0-ddf1498431ea",
                            DisplayName = "File",
                            Name = "ADMIN_FILE",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "2eb69c14-bce8-43a8-93b0-d6f4919975e5",
                            DisplayName = "Contact",
                            Name = "ADMIN_CONTACT",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "f61fb3eb-4498-4319-b618-615fbf962c26",
                            DisplayName = "Report",
                            Name = "ADMIN_REPORT",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "a5fa386c-fc18-4da6-a173-4788894e1df1",
                            DisplayName = "Forum Settings",
                            Name = "ADMIN_FORUM_SETTINGS",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "ba8b1242-49b5-4706-b641-e07d23b78884",
                            DisplayName = "Authorization",
                            Name = "ADMIN_AUTHORIZATION",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "038d6a97-5afc-4a47-b8c4-0dc1ef4e53dc",
                            DisplayName = "User",
                            Name = "ADMIN_USER",
                            ParentPermissionDefinitionId = "87800b42-e5dc-41e1-845a-789c387a9c8c"
                        },
                        new
                        {
                            Id = "aa55c85d-33ad-45ee-9dff-6d78aaf86a9c",
                            DisplayName = "Create Post",
                            Name = "ADMIN_POST_CREATE",
                            ParentPermissionDefinitionId = "6d807b00-447b-4e7f-8255-99912e4024e4"
                        },
                        new
                        {
                            Id = "69860332-d98b-45c5-b3df-0a3ea6d02bda",
                            DisplayName = "Update Post",
                            Name = "ADMIN_POST_UPDATE",
                            ParentPermissionDefinitionId = "6d807b00-447b-4e7f-8255-99912e4024e4"
                        },
                        new
                        {
                            Id = "29a67ad6-4f24-42fa-b79c-18aa350fe224",
                            DisplayName = "Delete Post",
                            Name = "ADMIN_POST_DELETE",
                            ParentPermissionDefinitionId = "6d807b00-447b-4e7f-8255-99912e4024e4"
                        },
                        new
                        {
                            Id = "9f24f6b8-d146-47b6-b09b-780983b14521",
                            DisplayName = "Create Heading",
                            Name = "ADMIN_HEADING_CREATE",
                            ParentPermissionDefinitionId = "7d6d900a-68bf-4b8c-961e-8a2a6f7f211e"
                        },
                        new
                        {
                            Id = "70be0e0a-8d40-4c72-a0d4-aeef641dbc8f",
                            DisplayName = "Update Heading",
                            Name = "ADMIN_HEADING_UPDATE",
                            ParentPermissionDefinitionId = "7d6d900a-68bf-4b8c-961e-8a2a6f7f211e"
                        },
                        new
                        {
                            Id = "affe5dc6-b91c-430b-8516-eb8a80714b7b",
                            DisplayName = "Delete Heading",
                            Name = "ADMIN_HEADING_DELETE",
                            ParentPermissionDefinitionId = "7d6d900a-68bf-4b8c-961e-8a2a6f7f211e"
                        },
                        new
                        {
                            Id = "3059ac0b-ecf8-4e95-acd7-f2a5378886fb",
                            DisplayName = "Create Section",
                            Name = "ADMIN_SECTION_CREATE",
                            ParentPermissionDefinitionId = "f25163b7-43e5-4eba-bccb-95f8d2454f0a"
                        },
                        new
                        {
                            Id = "68992dc4-c2d2-4479-bf0c-f33d4a511a9d",
                            DisplayName = "Update Section",
                            Name = "ADMIN_SECTION_UPDATE",
                            ParentPermissionDefinitionId = "f25163b7-43e5-4eba-bccb-95f8d2454f0a"
                        },
                        new
                        {
                            Id = "206707f8-5625-4949-ac64-7c54ab7f82a5",
                            DisplayName = "Delete Section",
                            Name = "ADMIN_SECTION_DELETE",
                            ParentPermissionDefinitionId = "f25163b7-43e5-4eba-bccb-95f8d2454f0a"
                        },
                        new
                        {
                            Id = "8e3404a5-4929-449b-ad84-e83efeda6290",
                            DisplayName = "Create Category",
                            Name = "ADMIN_CATEGORY_CREATE",
                            ParentPermissionDefinitionId = "d2a3ae9f-c13e-459d-b5b6-3fe5937cceb4"
                        },
                        new
                        {
                            Id = "4e479fa5-ad75-4c84-9e61-fda5d262b63b",
                            DisplayName = "Update Category",
                            Name = "ADMIN_CATEGORY_UPDATE",
                            ParentPermissionDefinitionId = "d2a3ae9f-c13e-459d-b5b6-3fe5937cceb4"
                        },
                        new
                        {
                            Id = "8af1ed15-b6f0-46bf-97ba-026273eb55fd",
                            DisplayName = "Delete Category",
                            Name = "ADMIN_CATEGORY_DELETE",
                            ParentPermissionDefinitionId = "d2a3ae9f-c13e-459d-b5b6-3fe5937cceb4"
                        },
                        new
                        {
                            Id = "f9ac31ce-3d30-4590-aab1-fce1694a7690",
                            DisplayName = "Create Static Page",
                            Name = "ADMIN_STATIC_PAGE_CREATE",
                            ParentPermissionDefinitionId = "ea105968-d9b2-4534-a7be-8ff26911e6d4"
                        },
                        new
                        {
                            Id = "4fd10b35-bfba-472c-884c-79106acb29d0",
                            DisplayName = "Update Static Page",
                            Name = "ADMIN_STATIC_PAGE_UPDATE",
                            ParentPermissionDefinitionId = "ea105968-d9b2-4534-a7be-8ff26911e6d4"
                        },
                        new
                        {
                            Id = "7ef1f32e-97c6-4bb9-bc07-57a5384e032f",
                            DisplayName = "Delete Static Page",
                            Name = "ADMIN_STATIC_PAGE_DELETE",
                            ParentPermissionDefinitionId = "ea105968-d9b2-4534-a7be-8ff26911e6d4"
                        },
                        new
                        {
                            Id = "e8e6009a-cf3b-41a4-89ef-0ae44fe53bbc",
                            DisplayName = "Draft Static Page",
                            Name = "ADMIN_STATIC_PAGE_DRAFT",
                            ParentPermissionDefinitionId = "ea105968-d9b2-4534-a7be-8ff26911e6d4"
                        },
                        new
                        {
                            Id = "3075314b-4f93-4998-81c8-f80ffc9632b7",
                            DisplayName = "Delete Static Page",
                            Name = "ADMIN_STATIC_PAGE_PUBLISH",
                            ParentPermissionDefinitionId = "ea105968-d9b2-4534-a7be-8ff26911e6d4"
                        },
                        new
                        {
                            Id = "f1e86cb5-37df-423f-9b77-c75c4d8cc4d3",
                            DisplayName = "Create Blog Post",
                            Name = "ADMIN_BLOG_POST_CREATE",
                            ParentPermissionDefinitionId = "60bff600-0087-4b56-be68-a2193adc4e74"
                        },
                        new
                        {
                            Id = "6fe53ad5-e173-44af-a6a8-224ee49f15fe",
                            DisplayName = "Update Blog Post",
                            Name = "ADMIN_BLOG_POST_UPDATE",
                            ParentPermissionDefinitionId = "60bff600-0087-4b56-be68-a2193adc4e74"
                        },
                        new
                        {
                            Id = "1bed742a-e365-430b-a38f-e0bf280b3c3c",
                            DisplayName = "Delete Blog Post",
                            Name = "ADMIN_BLOG_POST_DELETE",
                            ParentPermissionDefinitionId = "60bff600-0087-4b56-be68-a2193adc4e74"
                        },
                        new
                        {
                            Id = "94014f4f-7632-4b22-b4e5-208e21a62ff3",
                            DisplayName = "Draft Blog Post",
                            Name = "ADMIN_BLOG_POST_DRAFT",
                            ParentPermissionDefinitionId = "60bff600-0087-4b56-be68-a2193adc4e74"
                        },
                        new
                        {
                            Id = "837a53e1-27c9-46c6-87d7-3b8d6ca08deb",
                            DisplayName = "Delete Blog Post",
                            Name = "ADMIN_BLOG_POST_PUBLISH",
                            ParentPermissionDefinitionId = "60bff600-0087-4b56-be68-a2193adc4e74"
                        },
                        new
                        {
                            Id = "bf45e6ac-c5b6-4545-bb88-13c5247d74d9",
                            DisplayName = "Create Blog Category",
                            Name = "ADMIN_BLOG_CATEGORY_CREATE",
                            ParentPermissionDefinitionId = "7a0d912d-6939-41e2-b5bf-bb1679b4444a"
                        },
                        new
                        {
                            Id = "2c9ba66d-3843-4e1e-8310-566dfeb2b76a",
                            DisplayName = "Update Blog Category",
                            Name = "ADMIN_BLOG_CATEGORY_UPDATE",
                            ParentPermissionDefinitionId = "7a0d912d-6939-41e2-b5bf-bb1679b4444a"
                        },
                        new
                        {
                            Id = "5dd47b71-652b-4820-ab37-961922ca9f9f",
                            DisplayName = "Delete Blog Category",
                            Name = "ADMIN_BLOG_CATEGORY_DELETE",
                            ParentPermissionDefinitionId = "7a0d912d-6939-41e2-b5bf-bb1679b4444a"
                        },
                        new
                        {
                            Id = "eba68e19-aab6-4850-afc5-212af0170223",
                            DisplayName = "Delete Blog Comment",
                            Name = "ADMIN_BLOG_COMMENT_DELETE",
                            ParentPermissionDefinitionId = "8f512611-db14-4ae8-8c51-bd6ee781fd63"
                        },
                        new
                        {
                            Id = "7b840a2b-6fd5-46d6-88be-3deab30d468a",
                            DisplayName = "Upload File",
                            Name = "ADMIN_FILE_UPLOAD",
                            ParentPermissionDefinitionId = "dfe92ad3-1007-417c-bba0-ddf1498431ea"
                        },
                        new
                        {
                            Id = "a88f9a5b-de8e-4ca0-9849-d8be17a7d355",
                            DisplayName = "Delete Contact",
                            Name = "ADMIN_CONTACT_DELETE",
                            ParentPermissionDefinitionId = "2eb69c14-bce8-43a8-93b0-d6f4919975e5"
                        },
                        new
                        {
                            Id = "c49c9c80-5531-4d97-923c-9c32220c0ce4",
                            DisplayName = "Delete Report",
                            Name = "ADMIN_REPORT_DELETE",
                            ParentPermissionDefinitionId = "f61fb3eb-4498-4319-b618-615fbf962c26"
                        },
                        new
                        {
                            Id = "e022f309-249a-43d0-b04c-0e385faf4b2f",
                            DisplayName = "Save SMTP Settings",
                            Name = "ADMIN_FORUM_SETTINGS_SMTP_SAVE",
                            ParentPermissionDefinitionId = "a5fa386c-fc18-4da6-a173-4788894e1df1"
                        },
                        new
                        {
                            Id = "5d3da4f1-95a7-4fc4-abac-df5f782f1e79",
                            DisplayName = "Permission",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION",
                            ParentPermissionDefinitionId = "ba8b1242-49b5-4706-b641-e07d23b78884"
                        },
                        new
                        {
                            Id = "0e894f8b-569c-45ae-bcec-257200d23c63",
                            DisplayName = "Permission Definition",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_DEFINITION",
                            ParentPermissionDefinitionId = "ba8b1242-49b5-4706-b641-e07d23b78884"
                        },
                        new
                        {
                            Id = "2c15ed97-173a-41a8-8dcf-b16cf7090aec",
                            DisplayName = "Role",
                            Name = "ADMIN_AUTHORIZATION_ROLE",
                            ParentPermissionDefinitionId = "ba8b1242-49b5-4706-b641-e07d23b78884"
                        },
                        new
                        {
                            Id = "8347ac9a-2b9a-4b03-9cb5-3855adc46355",
                            DisplayName = "Change Permission Status",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_STATUS_CHANGE",
                            ParentPermissionDefinitionId = "5d3da4f1-95a7-4fc4-abac-df5f782f1e79"
                        },
                        new
                        {
                            Id = "70d82cd8-8910-4447-af13-caddf6a1f55b",
                            DisplayName = "Refresh Permissions",
                            Name = "ADMIN_AUTHORIZATION_PERMISSIONS_REFRESH",
                            ParentPermissionDefinitionId = "5d3da4f1-95a7-4fc4-abac-df5f782f1e79"
                        },
                        new
                        {
                            Id = "a3455235-c9b3-4e67-b3ae-aacf6751295d",
                            DisplayName = "Create Permission Definition",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_DEFINITION_CREATE",
                            ParentPermissionDefinitionId = "0e894f8b-569c-45ae-bcec-257200d23c63"
                        },
                        new
                        {
                            Id = "cb42ac4b-1daa-4f7c-856c-2af6603473e5",
                            DisplayName = "Update Permission Definition",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_DEFINITION_UPDATE",
                            ParentPermissionDefinitionId = "0e894f8b-569c-45ae-bcec-257200d23c63"
                        },
                        new
                        {
                            Id = "54463466-4952-4613-af9c-9b503b4960b7",
                            DisplayName = "Delete Permission Definition",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_DEFINITION_DELETE",
                            ParentPermissionDefinitionId = "0e894f8b-569c-45ae-bcec-257200d23c63"
                        },
                        new
                        {
                            Id = "7ae52279-9c38-4f0b-a1f1-e401db327816",
                            DisplayName = "Refresh Permission Definitions",
                            Name = "ADMIN_AUTHORIZATION_PERMISSION_DEFINITIONS_REFRESH",
                            ParentPermissionDefinitionId = "0e894f8b-569c-45ae-bcec-257200d23c63"
                        },
                        new
                        {
                            Id = "29dfed48-ac55-4439-ba79-465e29d0c3b5",
                            DisplayName = "Create Role",
                            Name = "ADMIN_AUTHORIZATION_ROLE_CREATE",
                            ParentPermissionDefinitionId = "2c15ed97-173a-41a8-8dcf-b16cf7090aec"
                        },
                        new
                        {
                            Id = "4b9c7722-f40b-403a-8a9b-670d91541657",
                            DisplayName = "Update Role",
                            Name = "ADMIN_AUTHORIZATION_ROLE_UPDATE",
                            ParentPermissionDefinitionId = "2c15ed97-173a-41a8-8dcf-b16cf7090aec"
                        },
                        new
                        {
                            Id = "25195f3b-ba45-4e1b-9472-a44feefbbc65",
                            DisplayName = "Delete Role",
                            Name = "ADMIN_AUTHORIZATION_ROLE_DELETE",
                            ParentPermissionDefinitionId = "2c15ed97-173a-41a8-8dcf-b16cf7090aec"
                        },
                        new
                        {
                            Id = "2da95710-6b31-413e-9e8b-979e58d8888d",
                            DisplayName = "Create User",
                            Name = "ADMIN_USER_CREATE",
                            ParentPermissionDefinitionId = "038d6a97-5afc-4a47-b8c4-0dc1ef4e53dc"
                        },
                        new
                        {
                            Id = "55506640-2c10-4578-9391-78c3a8d04881",
                            DisplayName = "Update User",
                            Name = "ADMIN_USER_UPDATE",
                            ParentPermissionDefinitionId = "038d6a97-5afc-4a47-b8c4-0dc1ef4e53dc"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dac42a6e-f7bb-4448-b3cf-1add431ccbbf",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        },
                        new
                        {
                            Id = "bac43a5e-f7bb-4448-b12f-1add431ccbbf",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "cbc43a8e-f7bb-4445-baaf-1add431ffbbf"
                        },
                        new
                        {
                            UserId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            RoleId = "dac42a6e-f7bb-4448-b3cf-1add431ccbbf"
                        },
                        new
                        {
                            UserId = "076f24af-8934-4bf2-8d4e-03a5b48db4f4",
                            RoleId = "bac43a5e-f7bb-4448-b12f-1add431ccbbf"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Identity.Models.Chat", b =>
                {
                    b.HasOne("Identity.Models.ForumUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Identity.Models.ForumUser", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.Navigation("Creator");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("Identity.Models.Message", b =>
                {
                    b.HasOne("Identity.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("Identity.Models.ForumUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Chat");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Identity.Models.Permission", b =>
                {
                    b.HasOne("Identity.Models.Permission", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentPermissionId");

                    b.HasOne("Identity.Models.PermissionDefinition", "PermissionDefinition")
                        .WithMany()
                        .HasForeignKey("PermissionDefinitionId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Parent");

                    b.Navigation("PermissionDefinition");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Identity.Models.PermissionDefinition", b =>
                {
                    b.HasOne("Identity.Models.PermissionDefinition", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentPermissionDefinitionId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Identity.Models.ForumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Identity.Models.ForumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Models.ForumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Identity.Models.ForumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
