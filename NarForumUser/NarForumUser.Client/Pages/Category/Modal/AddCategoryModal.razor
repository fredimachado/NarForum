@using NarForumUser.Client.Models.Category
@using NarForumUser.Client.Services.Common
@using NarForumUser.Client.Services.UI
@inject ToastService ToastService;
<Modal @ref="modal" ModalTitle="Add Category" Callback="@HandleRegister">
    <EditForm Model="@Model" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-2">
            <label asp-for="Name" class="control-label mb-2">Category Name</label>
            <InputText type="text" id="Name" class="form-control" @bind-Value="@Model.Name" autocomplete="off"></InputText>
            <ValidationMessage For="@(() => Model.Name)" />
        </div>
        <div class="form-group mb-2">
            <label asp-for="Name" class="control-label mb-2">Category Description</label>
            <InputText type="text" id="Name" class="form-control" @bind-Value="@Model.Description" autocomplete="off"></InputText>
            <ValidationMessage For="@(() => Model.Description)" />
        </div>
    </EditForm>
</Modal>

@code {
    Modal? modal;

    public CategoryVM Model { get; set; }

    [Parameter]
    public SectionVM? SectionVM { get; set; }

    [Parameter]
    public CategoryVM? ParentCategoryVM { get; set; }

    [Inject]
    private ICategoryService? CategoryService { get; set; }

    [Inject]
    public RefreshStateService? RefreshStateService { get; set; }

    [Parameter]
    public EventCallback<int> Callback { get; set; }


    protected override void OnInitialized()
    {
        Model = new CategoryVM();
    }

    public void ShowModal()
    {
        modal?.ShowModal();
    }

    public void CloseModal()
    {
        modal?.CloseModal();
    }

    protected async Task HandleRegister()
    {
        CategoryVM? category;

        if(ParentCategoryVM != null)
        {
            category = new CategoryVM
            {
                Name = Model.Name,
                Description = Model.Description,
                ParentCategoryId = ParentCategoryVM.Id,
                SectionId = ParentCategoryVM.SectionId
            };
        }
        else
        {
            category = new CategoryVM
            {
                Name = Model.Name,
                Description = Model.Description,
                SectionId = SectionVM.Id,
            };
        }

        var response = await CategoryService!.CreateCategory(category);

        if (response.IsSuccess)
        {
            ToastService.AddNotification(new Models.Toast.ToastNotification
            {
                Title = "Added Category",
                Message = "The category is added successfully",
                RightText = DateTime.UtcNow.ToString(),
                Type = ToastTypeVM.Success
            });
        }
        else
        {
            ToastService.CreateErrorToast("Error while adding category", response.Message);
        }

        await Callback.InvokeAsync();
        
        CloseModal();
    }
}
