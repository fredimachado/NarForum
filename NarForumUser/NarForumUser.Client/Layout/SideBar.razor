
@inject NavigationManager nav
@using NarForumUser.Client.Pages.Blog.Component

@if(isLoaded)
{
    @if (activePage == "blog")
    {
        <BlogCategoryList></BlogCategoryList>
    }
    else if (activePage == "user")
    {
        <UserFavorites UserName="@param2"></UserFavorites>
    }
    else if (activePage == "contact")
    {

    }
    else if (activePage == "post")
    {
        <RecentHeadings></RecentHeadings>
        <ForumStats></ForumStats>
    }
    else if (activePage == "category")
    {
        <RecentHeadings></RecentHeadings>
        <ForumStats></ForumStats>
    }
    else if (activePage == "create-heading")
    {
        <RecentHeadings></RecentHeadings>
        <ForumStats></ForumStats>
    }
    else if (activePage == null || activePage == "")
    {
        <RecentHeadings></RecentHeadings>
        <ForumStats></ForumStats>
    }
    else
    {
    }
}


@code {
    [Parameter]
    public string? slug { get; set; }


    string activePage = "";
    string param2 = "";

    string url = "";

    bool isLoaded = false;

    protected override void OnInitialized()
    {
        nav.LocationChanged += (o, e) =>
        {
            url = e.Location;
            string baseUrlRemoved = url.Split(new[] { "://" }, StringSplitOptions.None)[1].Split(new[] { '/' }, 2)[1];
            string[] parts = baseUrlRemoved.Split('/');

            if(parts is not null && parts.Length > 0)
            {
                activePage = parts[0];
                if(parts.Length > 1)
                {
                    param2 = parts[1];
                }
                else
                {
                    param2 = string.Empty;
                }
            }
            else
            {
                activePage = "";
                param2 = string.Empty;
            }

            StateHasChanged();
        };

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            LocationChanged();
        }

        base.OnAfterRender(firstRender);
    }

    private void LocationChanged()
    {
        url = nav.Uri;
        string baseUrlRemoved = url.Split(new[] { "://" }, StringSplitOptions.None)[1].Split(new[] { '/' }, 2)[1];
        string[] parts = baseUrlRemoved.Split('/');

        if (parts is not null && parts.Length > 0)
        {
            activePage = parts[0];
            if (parts.Length > 1)
            {
                param2 = parts[1];
            }
            else
            {
                param2 = string.Empty;
            }
        }
        else
        {
            activePage = "";
            param2 = string.Empty;
        }
        isLoaded = true;
        StateHasChanged();
    }
}
