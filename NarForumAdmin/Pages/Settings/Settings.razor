@page "/settings"
@using NarForumAdmin.Pages.Settings.Component

<h3>Settings</h3>

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-8">
        <div class="row settings-row">
            <h3 class="settings-row-title">General Settings</h3>
        </div>
        <div class="row settings-row">
            <div class="col-sm-6">
                <label>Forum URL Address</label>
            </div>
            <div class="col-sm-6">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" @bind-value=forumSettings.ForumUrl placeholder="Forum URL Address" aria-label="Forum URL Address" aria-describedby="button-addon2">
                </div>
            </div>
        </div>
        <div class="row settings-row">
            <div class="col-sm-6">
                <label>Consent Cookie</label>
            </div>
            <div class="col-sm-6">
                <div class="input-group mb-3">
                    <InputCheckbox @bind-Value=forumSettings.IsShowConsentCookie>Show Consent Cookie</InputCheckbox>
                </div>
            </div>
        </div>
        <div class="row settings-row">
            <div class="col-sm-6">
            </div>
            <div class="col-sm-6 text-end">
                <button class="btn btn-primary" @onclick=SaveForumSettings>Save</button>
            </div>
        </div>
        <div class="row settings-row">
            <h3 class="settings-row-title">Logo Settings</h3>
        </div>
        
        <LogoComponent></LogoComponent>
        <div class="row settings-row">
            <h3 class="settings-row-title">SMTP Settings</h3>
        </div>

        <SmtpSettings></SmtpSettings>
    </div>
</div>

@code {
    [Inject]
    private IForumSettingsService? settingsService { get; set; }

    private ForumSettingsVM forumSettings { get; set; } = new ForumSettingsVM();

    [Inject]
    private AlertService? alertService { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (settingsService is not null)
        {
            forumSettings = await settingsService.GetForumSettings();

            if (forumSettings.Id is null)
            {
                forumSettings = new ForumSettingsVM();
            }
        }
    }

    protected async Task SaveForumSettings()
    {
        if (settingsService is not null)
        {
            UpdateForumSettingsCommandVM command = new UpdateForumSettingsCommandVM
            {
                ForumUrl = forumSettings.ForumUrl,
            };

            var response = await settingsService.UpdateForumSettings(command);

            if (!response.IsSuccess)
            {
                if (alertService is not null)
                {
                    alertService.ShowAlert(response.Message);
                }
            }
        }
    }
}
