<h3 class="filter-header">Filter</h3>

@if (QueryModel != null)
{
    <EditForm Model="@QueryModel" OnValidSubmit="HandleQuery">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Username</label>
                    <InputText id="userName" class="form-control" placeholder="search username" @bind-Value="@QueryModel.SearchUserName" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.SearchUserName)" />
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Content</label>
                    <InputText id="content" class="form-control" placeholder="search content" @bind-Value="@QueryModel.SearchContent" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.SearchContent)" />
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">Post Id</label>
                    <InputText id="content" class="form-control" placeholder="search post id" @bind-Value="@QueryModel.SearchGuid" autocomplete="off"></InputText>
                    <ValidationMessage For="@(() => QueryModel.SearchGuid)" />
                </div>
            </div>
            
        </div>
        <div class="row mt-1">
            <div class="col-sm-9">
            </div>
            <div class="col-sm-3 text-end">
                <div class="form-group">
                    <input type="submit" value="Filter" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public PostPaginationQueryVM? QueryModel { get; set; }

    [Parameter]
    public EventCallback<int> Callback { get; set; }


    private void OnChangeCategory()
    {

    }

    protected async Task HandleQuery()
    {
        if (Callback.HasDelegate)
        {
            if(QueryModel.SearchGuid is not null)
            {
                Guid postGuid;
                bool isValid = Guid.TryParse(QueryModel.SearchGuid, out postGuid);
                if(isValid)
                {
                    QueryModel.PostId = postGuid;
                }
                else
                {
                    QueryModel.PostId = null;
                    QueryModel.SearchGuid = null;
                }
            }
            else
            {
                QueryModel.PostId = null;
            }

            await Callback.InvokeAsync();
        }
    }
}
