@page "/create-heading"
@page "/create-heading/{CategoryName}"


@if(CategoryName != null)
{
    <p>Create Heading for @CategoryName</p>
}
else
{
    <p>Create Heading</p>
}

<EditForm Model="@Model" OnValidSubmit="HandleCreateHeading">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group form-margin">
        <label asp-for="Title" class="control-label">Select Category</label>
        <InputSelect class="form-select" aria-label="Default select example" @bind-Value="@Model.CategoryId" @onchange="OnChangeCategory">
            @if(categories != null)
            {
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            } else
            {
                <option disabled value="0">Loading...</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => Model.Title)" />
    </div>

    <div class="form-group form-margin">
        <label asp-for="Title" class="control-label">Heading Title</label>
        <InputText id="Title" class="form-control" @bind-Value="@Model.Title"></InputText>
        <ValidationMessage For="@(() => Model.Title)" />
    </div>

    <div class="form-group text-end">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</EditForm>


@code {
    private CategoryVM? parentCategory;

    private List<CategoryVM>? categories;

    public HeadingVM Model { get; set; }

    [Parameter]
    public string? CategoryName { get; set; }

    [Inject]
    public IHeadingService? HeadingService { get; set; }
    [Inject]
    public ICategoryService? CategoryService { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }


    protected async override Task OnInitializedAsync()
    {
        Model = new HeadingVM();
        categories = await CategoryService.GetCategories();

        if(CategoryName != null)
        {
            parentCategory = categories.FirstOrDefault(x => x.Name == CategoryName);
            Model.CategoryId = parentCategory != null ? parentCategory.Id : null;
        }
        else
        {
            Model.CategoryId = categories.FirstOrDefault().Id;
            CategoryName = categories.FirstOrDefault().Name;
        }
    }

    private void OnChangeCategory()
    {
        parentCategory = categories.FirstOrDefault(x => x.Id == Model.CategoryId);
        CategoryName = parentCategory.Name;
    }

    protected async Task HandleCreateHeading()
    {
       

        HeadingVM? heading;

        heading = new HeadingVM
        {
            Title = Model.Title,
            CategoryId = Model.CategoryId
        };

        var result = await HeadingService.CreateHeading(heading);

        NavigationManager.NavigateTo($"/category/{CategoryName}");
    }
}
