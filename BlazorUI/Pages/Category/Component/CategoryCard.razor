@using BlazorUI.Models.Category

<div class="row category-card-body align-items-center">
    <div class="col-sm-6" style="display: flex;align-items: center;">
        <i class="bi bi-journals category-normal-icon" style="font-size:1.5em;margin-right:20px;"></i>
        <AuthorizeView>
            <Authorized>
                <i class="bi bi-pencil-square category-edit-button" style="font-size:1.5em;margin-right:20px;cursor:pointer" @onclick=UpdateCategory></i>
            </Authorized>
            <NotAuthorized>
                <i class="bi bi-journals category-edit-button" style="font-size:1.5em;margin-right:20px;"></i>
            </NotAuthorized>
        </AuthorizeView>
        <div>
            <a href="@url" class="link-category-primary link-offset-2 link-underline-opacity-100 link-underline-opacity-100-hover">@Model.Name </a>
            <p class="category-card-description">@Model.Description</p>
        </div>
    </div>
    @if(ShowNumber)
    {
        <div class="col-sm-1 category-card-heading-counter">
            @Model.HeadingCounter
        </div>
        <div class="col-sm-1 category-card-post-counter">
            @Model.PostCounter
        </div>
        <div class="col-sm-4 last-post-summary">
            <div class="d-flex flex-start">
                <a class="me-3 no-image-user-profile-link" href="@userUrl">
                    @if (@Model.UserProfileImageUrl is not null)
                    {
                        <span class="image-user-profile-heading-card">
                            <img width="35" height="35" src="@Model.UserProfileImageUrl">
                        </span>
                    }
                    else
                    {
                        @if(Model.LastUserId is null)
                        {
                            <span class="no-image-user-profile-heading-card">
                                ?
                            </span>
                        }
                        else
                        {
                            <span class="no-image-user-profile-heading-card" style="background:#@(Model.LastUserId.Value.ToString("N").Substring(0,6));">
                                @Model.LastUserName.ToUpper()[0]
                            </span>
                        }
                    }
                    
                </a>
                <div class="flex-grow-1 flex-shrink-1">
                    <small class="last-post-heading"><a href="@lastHeadingUrl">@Model.LastHeadingTitle</a></small>
                    <br />
                    <small class="last-post-username">by <a href="@userUrl">@Model.LastUserName</a></small>
                    <br />
                    <small class="last-post-date">@Model.ActiveDate</small>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public CategoryVM Model { get; set; }

    [Parameter]
    public bool ShowNumber { get; set; } = true;

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    // []
    [Parameter]
    public EventCallback<CategoryVM> UpdateCallback { get; set; }

    string url { 
        get 
        {
            return $"/category/{Model.Name.ToFriendlyUrl()}-{Model.CategoryId}"; 
        } 
    }

    string userUrl
    {
        get
        {
            return $"/user/{Model.LastUserName}";
        }
    }

    string lastHeadingUrl
    {
        get
        {
            if (Model.LastHeadingTitle != null && Model.LastHeadingId != null)
            {
                return $"/category/{Model.LastCategoryTitle.ToFriendlyUrl()}-{Model.LastCategoryId}/{Model.LastHeadingId.Value.EncodeGuidToBase64Url()}/{Model.LastHeadingTitle.ToFriendlyUrl()}";
            }
            return null;
        }
    }

    protected async Task UpdateCategory()
    {
        if(UpdateCallback.HasDelegate)
        {
            await UpdateCallback.InvokeAsync(Model);
        }
    }
}
