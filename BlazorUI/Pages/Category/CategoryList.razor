@page "/category/{CategoryName}"
@using BlazorUI.Pages.Category.Modal


<div class="row current-category-card-body">
    <div class="col-8">
        @CategoryName
    </div>
    <div class="col-2 text-end">
        <button @onclick="CreateHeading" class="link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Create Heading</button>
    </div>
    <div class="col-2 text-end">
        <button @onclick="OpenModal" class="link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Add Category</button>
    </div>
</div>

@if(!isLoaded)
{
    <p>Loading Data...</p>
}
else
{
    @foreach (var category in Categories)
    {
        <CategoryCard Model="category"></CategoryCard>
    }

    <hr />

    @foreach (var heading in Headings)
    {
        <HeadingCard Model="heading" CategoryName="@CategoryName"></HeadingCard>
    }
}

@if(Model != null)
{
    <AddCategoryModal @ref="addCategoryModal" ParentCategoryVM="@Model" Callback="RefreshCategories"></AddCategoryModal>
}

@code {
    private bool isLoaded { get; set; }
    private CategoryVM? Model { get; set; }

    [Parameter]
    public string CategoryName { get; set; }

    [Inject]
    public ICategoryService CategoryService { get; set; }

    [Inject]
    public IHeadingService HeadingService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }


    public List<CategoryVM>? Categories { get; set; }

    public List<HeadingVM>? Headings { get; set; }

    AddCategoryModal? addCategoryModal;


    protected async override Task OnInitializedAsync()
    {
        Model = await CategoryService.GetCategoryByName(CategoryName);
        Categories = await CategoryService.GetCategoriesByName(CategoryName);
        Headings = await HeadingService.GetHeadingsByCategoryName(CategoryName);
        isLoaded = true;
    }

    protected async override Task OnParametersSetAsync()
    {
        Model = await CategoryService.GetCategoryByName(CategoryName);
        Categories = await CategoryService.GetCategoriesByName(CategoryName);
        Headings = await HeadingService.GetHeadingsByCategoryName(CategoryName);
        isLoaded = true;
    }

    private void OpenModal()
    {
        addCategoryModal?.ShowModal();
    }

    private void CreateHeading()
    {
        NavigationManager.NavigateTo($"/create-heading/{CategoryName}");
    }


    private async Task RefreshCategories()
    {
        Categories = await CategoryService.GetCategoriesByName(CategoryName);
        await InvokeAsync(StateHasChanged);
    }
}
